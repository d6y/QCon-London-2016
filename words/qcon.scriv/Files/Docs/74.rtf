{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\froman\fcharset0 Times-Roman;\f1\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
\deftab720
\pard\pardeftab720\sl280\sa240

\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 o use this with a function that produces a tuple, we can define a 
\f1 Monoid
\f0  for a tuple that will be valid for any tuple where the types it contains also have a 
\f1 Monoid
\f0  available:\
\pard\pardeftab720\sl280

\f1 \cf2 implicit def tupleMonoid[A : Monoid, B : Monoid]: Monoid[(A, B)] =\
   new Monoid[(A, B)] \{\
     def combine(x: (A, B), y: (A, B)): (A, B) = \{\
       val (xa, xb) = x\
       val (ya, yb) = y\
       (Monoid[A].combine(xa, ya), Monoid[B].combine(xb, yb))\
     \}\
     def empty: (A, B) = (Monoid[A].empty, Monoid[B].empty)\
   \}\
}