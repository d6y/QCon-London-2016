{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fnil\fcharset0 Cochin;}
{\colortbl;\red255\green255\blue255;}
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural

\f0\fs28 \cf0 Keeping with the theme of simplicity, we can write a fold function.\
\
This is a version that\'92s hard coded for addition. We will generalize it in a moment.\
\
We have values in a list.\
What we do here is match on our list of values,\
And in the case of an empty list, Nil, the value to return is the empty value.\
If, on the other hand, our list is made up of a value and the rest of the list, our result is that value and whatever we get from folding on the rest of the list.  So it\'92s a recursive algorithm.\
\
Folding on list 1,2,3, will give us an answer of 6\
\
Visually we can see that happening.  Starting with a list of three values, we pick off the first value.\
We add to that the result of folding the rest of the list.\
We repeat the process.\
And eventually we run out of values, so we use zero, and combine all those steps up. And they add up to 6.\
\
}