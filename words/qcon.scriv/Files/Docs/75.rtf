{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fnil\fcharset0 Cochin;}
{\colortbl;\red255\green255\blue255;}
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural

\f0\fs28 \cf0 # Title\
\
Types working for you, not against you\
\
# Abstract\
\
There's a perception that Scala is too complicated.\
In part that may come from cryptic compiler errors and hard to understand types.\
You might be left wondering: what's the point?\
Why am I trying to hack my way through cruft?\
\
What I want to show is:\
\
1. There's a way of writing simple Scala.\
A few straightforward ideas can be used again and again.\
You using the power and flexibility of Scala, but in a sane way.\
This might not be the Scala you've heard about.\
\
2. The type system enables us to do more.\
It's not just about checking for errors.\
These ideas from the world of functional programming aren't about being "clever" (in the bad sense).\
It's about a useful set of tools for everyday coding.\
This might not be the functional programming you've heard about.\
\
The talk is in three parts:\
\
- an example of what Scala looks like when using pattern matching over classes;\
- how encoding an idea into types (using the "Combinable", or "monoid" if you like prefer that kind of word); and\
- using advanced features of Scala (compile-time sized checked collections) without having to complicate our own code.\
\
If you're Scala-curious,\
or heard that Scala or functional programming with types is just insanely complicated,\
this is the talk for you.\
\
\
# Bio\
\
- Richard Dallaway\
- @d6y\
- http://underscore.io\
- richard@underscore.io\
\
Richard is a partner at Underscore -- a consultancy specializing in Scala, especially the type-driven and functional aspects of Scala.\
He works on client projects writing software and helping teams deliver software with Scala.\
His focus is on the web, machine learning, and code review.\
He's the co-author of _Essential Slick_ (Underscore), and author of the _Lift Cookbook_ (O'Reilly).\
\
# Photo\
\
http://richard.dallaway.com/img/dallaway-uncropped.jpg\
\
}