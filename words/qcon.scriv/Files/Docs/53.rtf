{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fnil\fcharset0 Cochin;}
{\colortbl;\red255\green255\blue255;}
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural

\f0\fs28 \cf0 Although we\'92ve got to something more general, that\'92s an illustration.  I\'92d probably use an existing library for this that typically is still more general, not requiring a list either.  The same idea can be used to \'93fold over\'94 a vector, or a map, or a tree. And would be more efficient, and at least do tail recursive.\
\
But the basic idea is this, and I wanted to show that it isn\'92t a complicated idea \
\
\
\
So what\'85 we have a name for something simple, a monoid, and we can operate on it with a fold.\
\
Sure, we can respond to the bosses request with a little bit of code.\
\
That\'92s not the benefit.  We would have written that a bunch if ways.\
So let\'92s look at the benefits of why we might follow this route.\
}